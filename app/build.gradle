import org.tmatesoft.svn.core.wc.*

buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.11.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
        classpath 'org.tmatesoft.svnkit:svnkit:1.8.5'
    }
}

// http://wickedsource.org/2014/02/28/svn-revision-gradle/
def getSvnRevision(){
    ISVNOptions options = SVNWCUtil.createDefaultOptions(true);
    SVNClientManager clientManager = SVNClientManager.newInstance(options);
    SVNStatusClient statusClient = clientManager.getStatusClient();
    SVNStatus status = statusClient.doStatus(projectDir, false);
    SVNRevision revision = status.getRevision();
    return revision.getNumber();
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'hugo'
apply plugin: 'robolectric'
apply plugin: 'jacoco'



repositories {
    jcenter()
    maven { url 'https://github.com/Goddchen/mvn-repo/raw/master/' }
    mavenCentral()
    mavenLocal()
    maven { url 'http://mente.github.io/facebook-api-android-aar' }
}

//def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitSha = getSvnRevision()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion 19
    buildToolsVersion "21.0.1"

    defaultConfig {
        applicationId "gm.mobi.android.goles5"
        minSdkVersion 14
        targetSdkVersion 19

        versionCode 1
        versionName "0.1"

        resConfigs "es", "en"
        resConfigs "hdpi","xhdpi","xxhdpi"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
    }

    signingConfigs{
        release{
            storeFile file('../certs/release.keystore')
            storePassword "******"
            keyAlias "******"
            keyPassword "******"
        }

        debug{
            storeFile file('../certs/debug.keystore')
        }
    }

    buildTypes {
        release {
            runProguard false //TODO configurarlo y activarlo
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField "Boolean", "USE_FILE_LOGGER", "false"
        }
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            signingConfig signingConfigs.debug

            buildConfigField "Boolean", "USE_FILE_LOGGER", "true"
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

jacoco {
  version = '0.7.2.201409121644'
}

def coverageSourceDirs = [
    'src/main/java',
    'src/gen'
]

// This differs per what flavors buildTypes etc.
// But this example shows the 'testDebug'
// which is standard for Robolectric
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
  group = "Reporting"
  description = "Generate Jacoco coverage reports after running tests."
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
  // class R is used, but usage will not be covered, so ignore this class from report
  // This differs per plugin version (0.10 -> 0.11)
  // have very different fileTrees.
  // I have added rules to Ignore Dagger/Butterknife
  classDirectories = fileTree(
      dir: './build/intermediates/classes/debug',
      excludes: ['com/app/R*.class',
                 '**/*$InjectAdapter.class',
                 '**/*$ModuleAdapter.class',
                 '**/*$ViewInjector*.class'
      ])
  sourceDirectories = files(coverageSourceDirs)
  executionData = files('build/jacoco/testDebug.exec')
  // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
  // We iterate through the compiled .class tree and rename $$ to $.
  doFirst {
    new File('app/build/intermediates/classes/').eachFileRecurse { file ->
      if (file.name.contains('$$')) {
        file.renameTo(file.path.replace('$$', '$'))
      }
    }
  }
  afterEvaluate {
    // just clean up coveralls dashboard, following reports are not of interest
    testDebug.reports.junitXml.enabled = false
  }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Google libraries
    compile 'com.android.support:appcompat-v7:20.0.0'
    compile 'com.google.android.gms:play-services:6.1.11'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.4'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.4'

    compile 'com.squareup.dagger:dagger:1.2.2'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'

    compile 'com.squareup:otto:1.3.4'
    compile 'com.squareup.picasso:picasso:2.3.4'
    //compile 'com.squareup.okhttp:okhttp:2.0.0' //TODO meter por gradle cuando salga la versi√≥n corregida de Android L: https://github.com/square/okhttp/issues/967

    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.jakewharton.timber:timber:2.4.1'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.1.1'

    compile 'com.path:android-priority-jobqueue:1.1.2'
    compile 'com.github.castorflex.smoothprogressbar:library:0.5.2'
    compile 'de.hdodenhof:circleimageview:1.2.0'
    compile 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'

    compile 'com.melnykov:floatingactionbutton:1.0.3'

    compile('com.facebook:facebook-android-sdk:+@aar') {
        transitive = true
    }

    compile project(':ext-libs:SwipeRefreshLayoutOverlay:library')


    androidTestCompile "org.mockito:mockito-core:1.+"
    androidTestCompile 'org.robolectric:robolectric:2.3'
    androidTestCompile 'junit:junit:4.11'
    compile 'com.squareup.assertj:assertj-android:1.0.0'
    androidTestCompile 'org.assertj:assertj-core:1.6.1'
}