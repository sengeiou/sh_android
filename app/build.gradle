buildscript {

  repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
    mavenCentral()
  }

  dependencies {
    classpath 'com.github.JakeWharton:sdk-manager-plugin:0ce4cdf08009d79223850a59959d9d6e774d0f77'
    classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    classpath 'com.amazonaws:aws-android-sdk-s3:2.2.3'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'io.fabric.tools:gradle:1.+'
    classpath 'me.tatarka:gradle-retrolambda:3.7.0'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'hugo'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.google.gms.google-services'


repositories {
  jcenter()
  maven { url 'https://maven.fabric.io/public' }
  maven { url 'http://dl.bintray.com/sloy/maven' }
  //TODO remove when https://github.com/Fewlaps/quitnow-cache/pull/14 is merged and released
  mavenCentral()
  maven { url 'https://maven.google.com' }
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitBranch = 'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()

def versionMajor = 1
def versionMinor = 63
def versionRevision = 2


def isSnapshot = false
def isPreProduction = false
def databaseVersion = 73

def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

static def getDate() {
  new Date().format('yyyyMMdd')
}

coveralls {
  jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
  dependsOn 'test'
  onlyIf { System.env.'CI' }
}

android {
  compileSdkVersion 26
  buildToolsVersion '26.0.2'
  flavorDimensions "default"

  dexOptions {
    javaMaxHeapSize "4g"
    preDexLibraries = preDexEnabled
  }

  defaultConfig {
    applicationId "com.shootr.mobile"
    targetSdkVersion 26
    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath = true
      }
    }

    def travisBuildNumber = System.getenv('TRAVIS_JOB_NUMBER')
    versionCode versionMajor * 1000000 + versionMinor * 1000 + versionRevision
    versionName versionMajor + "." + versionMinor + "." + versionRevision
    versionName isPreProduction ? versionName + "-pre" : versionName
    versionName isSnapshot ? versionName + "-SNAPSHOT" : versionName
    versionName isSnapshot && travisBuildNumber != null ? versionName + "-" + travisBuildNumber :
        versionName

    if (gitBranch.toString() == "develop" || gitBranch.toString() == "master") {
      archivesBaseName = "Shootr-" + versionName
    } else {
      def branch = System.getenv('TRAVIS_BRANCH') != null ? System.getenv('TRAVIS_BRANCH') : gitBranch.toString()
      def formatBranch = branch.replaceAll("/", "_")
      archivesBaseName = getDate().toString() + "-" + formatBranch
      archivesBaseName = travisBuildNumber != null ? archivesBaseName + "-" + travisBuildNumber : archivesBaseName
    }

    multiDexEnabled true

    buildConfigField "int", "DATABASE_VERSION", databaseVersion.toString()
    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "GIT_BRANCH", "\"${gitBranch}\""
    buildConfigField "boolean", "USE_PRE_PRODUCTION", isPreProduction.toString()

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    aaptOptions {
      additionalParameters "--no-version-vectors"
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  splits {
    density {
      enable true
      exclude "ldpi", "tvdpi", "xxxhdpi"
      compatibleScreens 'small', 'normal', 'large', 'xlarge'
    }
  }
  signingConfigs {
    release {
      storeFile file('../certs/release.keystore')
      def (releaseKeystorePassword, releaseKeyAlias, releaseKeyPassword) = signingConfig()
      storePassword releaseKeystorePassword
      keyAlias releaseKeyAlias
      keyPassword releaseKeyPassword
    }

    debug {
      storeFile file('../certs/debug.keystore')
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      //TODO esto es s√≥lo para la historia del billing VOLVER A DESCOMENTAR ESTO
      applicationIdSuffix ".debug"
      signingConfig signingConfigs.debug
      testCoverageEnabled true
      def (safetyNetImpl) = apiKeys()
      buildConfigField 'String', "SafetyNetApiKey", safetyNetImpl
    }
    release {
      minifyEnabled false //TODO configurarlo y activarlo
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      def (safetyNetImpl) = apiKeys()
      buildConfigField 'String', "SafetyNetApiKey", safetyNetImpl
    }
  }

  // https://developer.android.com/tools/building/multidex.html#dev-build
  productFlavors {
    dev {
      minSdkVersion 21
    }
    prod {
      minSdkVersion 16
    }
  }

  testOptions {
    unitTests {
      all {
        jvmArgs '-noverify'
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'LICENSE.txt'
    exclude 'lib/mips/libRSSupport.so'
  }

  lintOptions {
    abortOnError false
    checkReleaseBuilds false
  }

  packagingOptions {
    exclude 'META-INF/rxjava.properties'
  }
}

dependencies {
  implementation project(':domain')
  compileOnly 'com.squareup.dagger:dagger-compiler:1.2.2'
  debugImplementation 'com.squareup.retrofit:retrofit-mock:1.9.0'
  debugImplementation 'com.github.pedrovgs:lynx:1.4'
  testImplementation 'junit:junit:4.12'
  testImplementation "org.mockito:mockito-core:1.10.19"
  testImplementation 'org.assertj:assertj-core:1.7.0'
  androidTestImplementation('com.squareup.assertj:assertj-android:1.0.0') {
    exclude group: 'com.android.support'
  }

  implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
    transitive = true;
  }
  // If you want to use the GPU Filters
  //noinspection GradleCompatible
  androidTestImplementation 'com.android.support.test:runner:1.0.1'
  androidTestImplementation 'com.android.support.test:rules:1.0.1'
  androidTestImplementation 'com.android.support:support-annotations:25.3.1'
  implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
  implementation 'com.artjimlop:altex-image-downloader:0.0.4'
  implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
  implementation 'com.artjimlop:altex-image-downloader:0.0.4'
  implementation 'com.labo.kaji:swipeawaydialog:0.1.0'
  implementation 'com.roughike:bottom-bar:2.1.1'
  implementation 'com.ncapdevi:frag-nav:1.0.3'
  implementation 'com.android.support:appcompat-v7:26.1.0'
  implementation 'com.android.support:design:26.1.0'
  implementation 'com.android.support:recyclerview-v7:26.1.0'
  implementation 'com.android.support:customtabs:26.1.0'
  implementation 'com.android.support:multidex:1.0.3'
  implementation 'com.google.firebase:firebase-messaging:17.3.2'
  implementation 'com.google.android.gms:play-services-analytics:16.0.3'
  implementation 'com.squareup.dagger:dagger:1.2.2'
  implementation 'com.squareup.okhttp3:okhttp:3.9.0'
  implementation 'com.squareup:otto:1.3.5'
  implementation 'com.jakewharton:butterknife:8.8.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
  implementation 'com.jakewharton.timber:timber:2.4.1'
  implementation 'de.hdodenhof:circleimageview:1.2.0'
  implementation 'com.squareup.retrofit:retrofit:1.9.0'
  implementation 'org.threeten:threetenbp:1.3.1'
  implementation 'com.cocosw:bottomsheet:1.+@aar'
  implementation 'com.github.chrisbanes.photoview:library:1.2.4'
  implementation 'com.facebook.android:facebook-android-sdk:4.28.0'
  implementation 'com.facebook.stetho:stetho:1.1.0'
  implementation 'com.facebook.stetho:stetho-okhttp:1.1.0'
  implementation 'cat.ereza:customactivityoncrash:1.4.0'
  implementation 'com.github.paolorotolo:appintro:3.2.0'
  implementation 'com.sloydev:collapsingavatartoolbar:1.1.0'
  implementation 'com.github.bumptech.glide:glide:3.7.0'
  implementation 'com.github.bumptech.glide:okhttp-integration:1.3.1@aar'
  implementation 'com.fewlaps.quitnowcache:quitnow-cache:3.0.0'
  implementation 'io.reactivex:rxjava:1.1.7'
  implementation 'io.reactivex:rxandroid:1.2.1'
  implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
  implementation 'jp.wasabeef:glide-transformations:1.3.1'
  implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
  implementation 'com.android.support:palette-v7:26.1.0'
  implementation 'com.android.support:cardview-v7:26.1.0'
  implementation 'com.makeramen:roundedimageview:2.2.1'
  implementation 'com.yayandroid:ParallaxRecyclerView:1.1'
  implementation 'com.sackcentury:shinebutton:0.1.4'
  implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
  implementation 'com.eftimoff:androidplayer:1.0.3@aar'
  implementation 'com.nineoldandroids:library:2.4.0'
  implementation 'com.mixpanel.android:mixpanel-android:4.+'
  implementation 'com.isseiaoki:simplecropview:1.1.4'
  implementation 'com.mikepenz:actionitembadge:3.3.0@aar'
  implementation 'com.mikepenz:iconics-core:2.8.0@aar'
  implementation 'com.android.installreferrer:installreferrer:1.0'
  implementation 'com.appsflyer:af-android-sdk:4.8.15'
  implementation 'com.github.clans:fab:1.6.4'
  implementation 'com.daasuu:BubbleLayout:1.1.1'

  implementation 'com.google.android.gms:play-services-safetynet:15.0.1'
  implementation("com.github.bumptech.glide:recyclerview-integration:4.1.1") {
    // Excludes the support library because it's already included by Glide.
    transitive = false
  }
  implementation 'com.github.devahamed:multi-view-adapter:1.2.2'
  implementation 'com.github.devahamed:multi-view-adapter-databinding:1.2.2'
  implementation 'com.google.firebase:firebase-core:16.0.3'
  implementation 'com.google.firebase:firebase-ads:15.0.1'
  implementation('com.facebook.android:audience-network-sdk:4.+') {
    exclude group: "com.google.android.gms"
  }

  implementation 'com.vincentbrison.openlibraries.android:dualcache:3.1.1'
  implementation 'com.vincentbrison.openlibraries.android:dualcache-jsonserializer:3.1.1'
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
  implementation 'com.neovisionaries:nv-websocket-client:2.3'
  implementation 'com.android.support.constraint:constraint-layout:1.1.3'
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation files('libs/YouTubeAndroidPlayerApi.jar')
  implementation 'com.treebo:internetavailabilitychecker:1.0.1'
  implementation 'com.android.billingclient:billing:1.1'
}

/**
 * Tries to read signing values form a properties file, and fallbacks to environment variables if they are not found
 * @return keystorePassword , keyAlias, keyPassword
 */
def signingConfig() {
  signingConfigFromFile() ?: signinConfigFromEnvironment()
}

/**
 * Reads signing values form a environment variables
 * @return keystorePassword , keyAlias, keyPassword
 */
def signinConfigFromEnvironment() {
  println '-> signinConfigFromEnvironment'
  return [System.getenv('STORE_PASSWORD'), System.getenv('KEY_ALIAS'), System.getenv(
      'KEY_PASSWORD')]
}

/**
 * Reads signing values form a properties file
 * @return keystorePassword , keyAlias, keyPassword
 */
def signingConfigFromFile() {
  println '-> signingConfigFromFile'
  Properties props = new Properties()
  def propFile = file('signing.properties')

  if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null &&
        props.containsKey('STORE_PASSWORD') &&
        props.containsKey('KEY_ALIAS') &&
        props.containsKey('KEY_PASSWORD')) {

      def keystorePassword = props['STORE_PASSWORD']
      def keyAlias = props['KEY_ALIAS']
      def keyPassword = props['KEY_PASSWORD']

      return [keystorePassword, keyAlias, keyPassword]
    } else {
      println 'signing.properties found but some entries are missing'
    }
  } else {
    println 'signing.properties not found'
  }
  return null
}

def apiKeys() {
  apiKeysFromLocal() ?: apiKeysFromEnviroment()
}

def apiKeysFromEnviroment() {
  println '-> apiKeysFromEnviroment'
  return ['"' + System.getenv('SAFETY_NET') + '"']
}

def apiKeysFromLocal() {
  String propertiesName = "${project.gradle.gradleUserHomeDir}/keys.properties"
  Properties props = new Properties()
  def propFile = file(propertiesName)
  if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    println 'api key from local found!!'
    def safetyNetApiKey = props['safetyNetApiKey']
    return [safetyNetApiKey]
  } else {
    println 'api key from local not found'
  }
  return null
}