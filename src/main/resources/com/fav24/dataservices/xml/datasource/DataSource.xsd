<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xsd:element name="DataSources">
		<xsd:complexType>
			<xsd:sequence>
				<!-- Configuración de la fuente de datos a servir. -->
				<xsd:element name="DataServices" type="TDataSource" minOccurs="1" maxOccurs="1"/>
				<!-- Configuración de la fuente de datos donde se almacenará la información estadística. -->
				<xsd:element name="Statistics" type="TDataSource" minOccurs="0" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:attribute name="Version" type="TVersion" use="optional"/>
			<xsd:attribute name="Description" type="xsd:string" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<!-- -->
	<xsd:simpleType name="TVersion">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9]{1,5})[.]([0-9]{1,5})[.]([0-9]{1,5})(((alpha|beta|rc)-([0-9]{1,5}))|)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- -->
	<xsd:complexType name="TDataSource">
		<xsd:sequence>
			<!-- Configuración de la fuente de datos a servir. -->
			<xsd:element name="ConnectionPool" type="TConnectionPoolConfiguration" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="Host" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="Port" type="xsd:integer" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="DatabaseName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="UserName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="Password" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
		<!-- Nombre para distinguir el pool. -->
		<xsd:attribute name="Name" type="xsd:string" use="optional" default="auto-generated"/>
	</xsd:complexType>
	<!-- -->
	<xsd:complexType name="TConnectionPoolConfiguration">
		<xsd:sequence>
			<!-- Configuración de los distintos aspectos de una conexión. -->
			<xsd:element name="Connection" type="TConnectionConfiguration" minOccurs="1" maxOccurs="1"/>
			<!-- Este es el nombre de la clase DataSource proporcionada por el controlador JDBC.
			Consulte la documentación de su driver JDBC específico para obtener este nombre de clase.
			p.e. com.mysql.jdbc.jdbc2.optional.MysqlDataSource para MySQL.  
			Los DataSource <Note XA> no son compatibles. XA requiere un administrador de transacciones como p.e. bitronix. -->
			<xsd:element name="DataSourceClassName" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
		<!-- Tiempo máximo en milisegundos que una conexión puede estar inactiva en el pool. 
		Una conexión se considera una inactiva, si ha estado sujeta a una variación máxima de 30 segundos, 
		y una variación media de 15 segundos. En cualquier otro caso, se considerará activa. 
		Un valor de 0 significa que las conexiones inactivas no se eliminarán del pool. -->
		<xsd:attribute name="IdleTimeout" type="xsd:long" use="optional" default="600000"/>
		<!-- Duración máxima de una conexión en el pool. Cuando una conexión llega a este tiempo de espera, incluso si se usa poco, será retirada del pool.
		Una conexión en uso nunca se retirará, sólo cuando está inactiva va a ser eliminada.
		Se recomienda el establecimiento de este valor, y el uso de algo razonable como 30 minutos o 1 hora.
		Un valor de 0 indica que no hay tiempo de vida máximo (duración infinita), sujeto por supuesto a la configuración idleTimeout. -->
		<xsd:attribute name="MaxLifetime" type="xsd:long" use="optional" default="1800000"/>
		<!-- Número mínimo de conexiones que el pool trata de mantener, incluyendo tanto inactivas como conexiones en-uso. 
		Si las conexiones se establecen por debajo de este valor, HikariCP hará un mayor esfuerzo para restaurar conexiones en uso de forma rápida y eficiente. --> 
		<xsd:attribute name="MinimumPoolSize" type="xsd:integer" use="optional" default="10"/>
		<!-- Tamaño máximo que se permite al pool, tieniendo en cuenta tanto las conexiones en uso, como en reposo.
		Básicamente, este valor determinará el número máximo de conexiones reales a la base de datos backend.
		Cuando el pool alcanza este valor, y no hay conexiones inactivas disponibles, la llamada a getConnection() se bloqueará durante un máximo de milisegundos 
		definido por el <Connection/TimeOut> antes de tiempo de espera. -->
		<xsd:attribute name="MaximumPoolSize" type="xsd:integer" use="optional" default="30"/>
	</xsd:complexType>
	<!-- -->
	<xsd:complexType name="TConnectionConfiguration">
		<xsd:sequence>
			<!-- Esta propiedad establece una sentencia SQL que se ejecutará después de cada nueva creación de la conexión antes de añadirla al pool. 
			Si la sentencia no es válida o se produce una excepción, se trata como un error de conexión y se seguirá la lógica de reintentos. -->
			<xsd:element name="InitSql" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<!-- Esto es para las bases de datos que no soportan la API JDBC4 que chequea el estado de una conexión mediante el método < Connection.isValid() >. 
			Ésta es la consulta que se ejecutará justo antes de devolver una conexión del pool para validar que la conexión a la base de datos todavía está viva.
			Depende de cada base de datos y debe ser una consulta lo más eficiente posible (por ejemplo, "SELECT 1").
			Esta propiedad tiene efecto en caso que la propiedad < Jdbc4ConnectionTest > esté desactivada. -->
			<xsd:element name="TestQuery" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
		<!-- Esta propiedad controla el comportamiento del auto-commit de las conexiones al devolverlas al pool. -->
		<xsd:attribute name="AutoCommit" type="xsd:boolean" use="optional" default="false"/>
		<!-- Esta propiedad controla el tiempo máximo en milisegundos que un cliente esperará una conexión del pool.
		Si este tiempo se excede sin que haya una conexión disponible, se producirá una excepción de SQL. -->
		<xsd:attribute name="Timeout" type="xsd:long" use="optional" default="5000"/>
		<!-- Nivel de aislamiento de las transacciones por defecto, para las conexiones retornadas por el pool. 
		Si no se especifica esta propiedad, se utiliza el nivel de aislamiento de transacción por defecto definido por el controlador JDBC. 
		Por lo general, se debe utilizar el nivel de aislamiento de transacción predeterminado por el controlador JDBC. 
		Utilice esta propiedad si tiene requisitos específicos de aislamiento comunes para todas las consultas, 
		de lo contrario simplemente establecer el nivel de aislamiento de forma manual al crear o preparar los statements. -->
		<xsd:attribute name="TransactionIsolation" type="TTransactionIsolation" use="optional" default="REPEATABLE_READ"/>
		<!-- Esta propiedad determina si se debe utilizar el método JDBC4 Connection.isValid() para comprobar que la conexión todavía está viva.
		Este valor es mutuamente excluyente con la propiedad <TestQuery>. Este modo de comprobación es siempre preferible a <TestQuery>. -->
		<xsd:attribute name="Jdbc4ConnectionTest" type="xsd:boolean" use="optional" default="true"/>
	</xsd:complexType>
	<!-- Tipos de aislamiento de las transacciones:

			SERIALIZABLE: Previene de lecturas sucias, lecturas no repetibles y las lecturas fantasma. "Serializable". 
			REPEATABLE_READ: Casi como SERIALIZABLE "serializable", aunque, se pueden dar lecturas fantasma.
			READ_COMMITTED: Asegura que únicamente se puedan leer datos "comitados". 
			READ_UNCOMMITTED: Permite lecturas sucias, lecturas no repetibles y las lecturas fantasma que se produzcan.
			NONE: No se soportan transacciones.
			
			Nota: Una lectura "fantasma" se da quando una cierta transacción lee todas las filas que satisfacen una cierta condición WHERE,
			y una segunda transacción inserta una nueva fila que también satiface dicha condición.
			Es entonces quando la primera transación al releer con la misma condición, obteniene la fila "fantasma" adicional.
	-->
	<xsd:simpleType name="TTransactionIsolation">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SERIALIZABLE"/>
			<xsd:enumeration value="REPEATABLE_READ"/>
			<xsd:enumeration value="READ_COMMITTED"/>
			<xsd:enumeration value="READ_UNCOMMITTED"/>
			<xsd:enumeration value="NONE"/>
		</xsd:restriction>
	</xsd:simpleType></xsd:schema>
